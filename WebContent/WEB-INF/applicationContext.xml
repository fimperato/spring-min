<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>
	<!--
		========================= Start of PERSISTENCE DEFINITIONS
		=========================
	-->

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="/WEB-INF/jdbc.properties" />
	</bean>
	<!-- DataSource Definition -->
	<!--  ORIGINALE
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">

		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url">
			<value> jdbc:oracle:thin:@nome-server:1521:SID-x</value>
		</property>
		<property name="username">
			<value>username-x</value>
		</property>
		<property name="password">
			<value>password-x</value>
		</property>
	-->
		<!--
		<property name="url">
			<value>jdbc:oracle:thin:@nome-server:1521:SID-x</value>
	    </property>
	    <property name="username"><value>username-x</value></property>
	    <property name="password"><value>password-x</value></property>
		-->
		<!--
		<property name="url">
			<value>jdbc:oracle:thin:@nome-server:1521:SID-x</value>
		</property>
		<property name="username"><value>username-x</value></property>
		<property name="password"><value>password-x</value></property>
		-->
	<!--
	</bean>
	-->
	
	<!--  DataSource connection -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>  
    </bean>
	
	<!-- Hibernate SessionFactory Definition -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="mappingResources">
			<list>
				<value>com/eni/docmin/domain/EmployeeEntity.hbm.xml</value>
				
			</list>
		</property>

		<property name="hibernateProperties">
			<!--  
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.Oracle9Dialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.cglib.use_reflection_optimizer">
					false
				</prop>
				<prop key="hibernate.connection.pool_size">25</prop>
				<prop key="hibernate.hbm2ddl.auto">none</prop>
				<prop key="hibernate.cache.provider_class">
					org.hibernate.cache.NoCacheProvider
				</prop>
			</props>
			-->
			
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.cglib.use_reflection_optimizer">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<!-- <prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.EhCacheProvider</prop> -->
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.HashtableCacheProvider</prop> 
			</props> 
			
			<!-- 
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.cglib.use_reflection_optimizer">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.cache.provider_class">net.sf.hibernate.cache.HashtableCacheProvider</prop>
			</props> 
			 -->
		</property>
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>

	<!-- Spring Data Access Exception Translator Defintion -->
	<bean id="jdbcExceptionTranslator"
		class="org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>

	<!-- Hibernate Template Defintion -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
		<property name="jdbcExceptionTranslator">
			<ref bean="jdbcExceptionTranslator" />
		</property>
	</bean>

	<!-- DAO Definition: Hibernate implementation -->
	<bean id="employeeDao" class="com.eni.docmin.domain.dao.EmployeeDaoImpl">
		<property name="hibernateTemplate">
			<ref bean="hibernateTemplate" />
		</property>
	</bean>
	

	<!-- -->
	<!--
		========================= Start of SERVICE DEFINITIONS
		=========================
	-->

	<!-- Hibernate Transaction Manager Definition -->
	<!--
		<bean id="transactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="autodetectTransactionManager" value="false" />
	-->
	<!--
		<property name="sessionFactory"><ref
		local="sessionFactory"/></property>
	-->
	<!-- </bean> -->

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<!--  Service Definition -->
	<bean id="employeeServiceTarget" class="com.eni.docmin.domain.service.EmployeeServiceImpl">
		<property name="employeeDao">
			<ref local="employeeDao" />
		</property>
	</bean>
	
	<!-- Cached Service Definition -->
	<!-- Transactional proxy for the Service -->
	<bean id="employeeService"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref local="transactionManager" />
		</property>
		<property name="target">
			<ref local="employeeServiceTarget" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	
</beans>
